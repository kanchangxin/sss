<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.thinkjoy.sss.dao.IMarketingrecordDAO">
<!--
insert
update
updateNull
deleteById
deleteByCondition
deleteByProperty
fetch
findOne
findList
findAll
queryPage
like
queryList
queryOne
count
selectMaxId
updateOrSave
selectOne
selectList
-->

    <sql id="Base_Column_List">
        id as id ,
        shopHistoryId as shopHistoryId ,
        marketingId as marketingId ,
        cost as cost ,
        activEffect as activEffect 
    </sql>
    <insert id="insert" parameterType="Marketingrecord">
        INSERT INTO xkf_marketingrecord (
        shopHistoryId,
        marketingId,
        cost,
        activEffect
        ) VALUES (
        #{shopHistoryId},
        #{marketingId},
        #{cost},
        #{activEffect}
        )
            <selectKey resultType="java.lang.Integer" keyProperty="id">
                SELECT LAST_INSERT_ID() AS ID
            </selectKey>
    </insert>

    <!-- 更新 -->
    <update id="update" parameterType="Marketingrecord">
        UPDATE xkf_marketingrecord
        <trim prefix="SET" suffixOverrides=",">
            <if test="shopHistoryId!=null">
                shopHistoryId = #{shopHistoryId},
            </if>
            <if test="marketingId!=null">
                marketingId = #{marketingId},
            </if>
            <if test="cost!=null">
                cost = #{cost},
            </if>
            <if test="activEffect!=null">
                activEffect = #{activEffect},
            </if>
        </trim>
        WHERE
        id = #{id}
    </update>

    <update id="updateMap">
        UPDATE xkf_marketingrecord
        <trim prefix="SET" suffixOverrides=",">
            <if test="map.shopHistoryId!=null">
                shopHistoryId = #{map.shopHistoryId},
            </if>
            <if test="map.marketingId!=null">
                marketingId = #{map.marketingId},
            </if>
            <if test="map.cost!=null">
                cost = #{map.cost},
            </if>
            <if test="map.activEffect!=null">
                activEffect = #{map.activEffect},
            </if>
        </trim>
        WHERE
        id = #{map.id}
    </update>

    <update id="updateByCondition">
        UPDATE xkf_marketingrecord
        <trim prefix="SET" suffixOverrides=",">
            <if test="update.shopHistoryId!=null">
                shopHistoryId = #{update.shopHistoryId},
            </if>
            <if test="update.marketingId!=null">
                marketingId = #{update.marketingId},
            </if>
            <if test="update.cost!=null">
                cost = #{update.cost},
            </if>
            <if test="update.activEffect!=null">
                activEffect = #{update.activEffect},
            </if>
        </trim>

        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="condition.id!=null">
                AND id = #{condition.id}
            </if>
            <if test="condition.shopHistoryId!=null">
                AND shopHistoryId = #{condition.shopHistoryId}
            </if>
            <if test="condition.marketingId!=null">
                AND marketingId = #{condition.marketingId}
            </if>
            <if test="condition.cost!=null">
                AND cost = #{condition.cost}
            </if>
            <if test="condition.activEffect!=null">
                AND activEffect = #{condition.activEffect}
            </if>
        </trim>
    </update>

    <insert id="insertMap" >
        INSERT INTO xkf_marketingrecord (
                shopHistoryId,
                marketingId,
                cost,
                activEffect
        ) VALUES (
                    #{map.shopHistoryId},
                    #{map.marketingId},
                    #{map.cost},
                    #{map.activEffect}
        )
    </insert>


    <update id="updateNull" parameterType="Marketingrecord">
        UPDATE xkf_marketingrecord
        <trim prefix="SET" suffixOverrides=",">
            shopHistoryId = #{shopHistoryId},
            marketingId = #{marketingId},
            cost = #{cost},
            activEffect = #{activEffect},
        </trim>
        WHERE
        id = #{id} 
    </update>

    <!-- 按Id删除 -->
    <delete id="deleteById" parameterType="java.lang.Integer">
        DELETE FROM xkf_marketingrecord
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            AND id = #{id}
        </trim>
    </delete>


    <delete id="deleteByCondition" parameterType="java.util.Map">
        DELETE FROM xkf_marketingrecord
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="id!=null">
                AND id = #{id}
            </if>
            <if test="shopHistoryId!=null">
                AND shopHistoryId = #{shopHistoryId}
            </if>
            <if test="marketingId!=null">
                AND marketingId = #{marketingId}
            </if>
            <if test="cost!=null">
                AND cost = #{cost}
            </if>
            <if test="activEffect!=null">
                AND activEffect = #{activEffect}
            </if>
        </trim>
    </delete>

    <delete id="deleteByProperty" parameterType="java.util.Map">
        DELETE FROM xkf_marketingrecord WHERE
        ${property} = #{value}
    </delete>

    <select id="fetch" parameterType="java.lang.Integer" resultType="Marketingrecord">
        SELECT
        <include refid="Base_Column_List" />
        FROM xkf_marketingrecord
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            AND id = #{id}
        </trim>
    </select>

    <select id="findOne" parameterType="java.util.Map" resultType="Marketingrecord">
        SELECT
        <include refid="Base_Column_List" />
        FROM xkf_marketingrecord WHERE
        ${property} = #{value}
        <if test="orderBy!=null">
            ORDER BY ${orderBy} ${sortBy}
        </if>
        LIMIT 0,1
    </select>

    <select id="findList" parameterType="java.util.Map" resultType="Marketingrecord">
        SELECT
        <include refid="Base_Column_List" />
        FROM xkf_marketingrecord WHERE
        ${property} = #{value}
        <if test="orderBy!=null">
            ORDER BY ${orderBy} ${sortBy}
        </if>
    </select>

    <select id="findAll" resultType="Marketingrecord">
        SELECT
        <include refid="Base_Column_List" />
        FROM xkf_marketingrecord
        <if test="orderBy!=null">
            ORDER BY ${orderBy} ${sortBy}
        </if>
    </select>

    <select id="queryPage" resultType="Marketingrecord">
        SELECT
        <if test="selector!=null">
            <trim prefixOverrides=",">
                        <if test="selector.id!=null">
                            , id
                        </if>
                        <if test="selector.shopHistoryId!=null">
                            , shopHistoryId
                        </if>
                        <if test="selector.marketingId!=null">
                            , marketingId
                        </if>
                        <if test="selector.cost!=null">
                            , cost
                        </if>
                        <if test="selector.activEffect!=null">
                            , activEffect
                        </if>
            </trim>
        </if>
        <if test="selector==null">
        <include refid="Base_Column_List" />
        </if>
        FROM xkf_marketingrecord
        <where>

            <if test="condition.whereSql != null">
                and id in (#{condition.whereSql})
            </if>

            <if test="condition.id!=null">
                ${condition.groupOp}   ${condition.id.field}  ${condition.id.op}  #{condition.id.data}
            </if>
            <if test="condition.shopHistoryId!=null">
                ${condition.groupOp}   ${condition.shopHistoryId.field}  ${condition.shopHistoryId.op}  #{condition.shopHistoryId.data}
            </if>
            <if test="condition.marketingId!=null">
                ${condition.groupOp}   ${condition.marketingId.field}  ${condition.marketingId.op}  #{condition.marketingId.data}
            </if>
            <if test="condition.cost!=null">
                ${condition.groupOp}   ${condition.cost.field}  ${condition.cost.op}  #{condition.cost.data}
            </if>
            <if test="condition.activEffect!=null">
                ${condition.groupOp}   ${condition.activEffect.field}  ${condition.activEffect.op}  #{condition.activEffect.data}
            </if>


    </where>
        <if test="orderBy!=null">
        ORDER BY ${orderBy} ${sortBy}
        </if>
        <if test="offset != null">
            limit ${offset}, ${rows}
        </if>
    </select>

    <select id="like" parameterType="java.util.Map" resultType="Marketingrecord">
        SELECT
        <if test="selector!=null">
            <trim prefixOverrides=",">
                    <if test="selector.id!=null">
                        , id
                    </if>
                    <if test="selector.shopHistoryId!=null">
                        , shopHistoryId
                    </if>
                    <if test="selector.marketingId!=null">
                        , marketingId
                    </if>
                    <if test="selector.cost!=null">
                        , cost
                    </if>
                    <if test="selector.activEffect!=null">
                        , activEffect
                    </if>
            </trim>
        </if>
        <if test="selector==null">
            <include refid="Base_Column_List" />
        </if>
        FROM xkf_marketingrecord
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="condition.id!=null">
                AND id like CONCAT('%', #{condition.id} , '%')
            </if>
            <if test="condition.shopHistoryId!=null">
                AND shopHistoryId like CONCAT('%', #{condition.shopHistoryId} , '%')
            </if>
            <if test="condition.marketingId!=null">
                AND marketingId like CONCAT('%', #{condition.marketingId} , '%')
            </if>
            <if test="condition.cost!=null">
                AND cost like CONCAT('%', #{condition.cost} , '%')
            </if>
            <if test="condition.activEffect!=null">
                AND activEffect like CONCAT('%', #{condition.activEffect} , '%')
            </if>
        </trim>
        <if test="orderBy!=null">
        ORDER BY ${orderBy} ${sortBy}
        </if>
    </select>


    <select id="queryList" parameterType="java.util.Map" resultType="Marketingrecord">
        SELECT
        <if test="selector!=null">
            <trim prefixOverrides=",">
                <if test="selector.id!=null">
                    , id
                </if>
                <if test="selector.shopHistoryId!=null">
                    , shopHistoryId
                </if>
                <if test="selector.marketingId!=null">
                    , marketingId
                </if>
                <if test="selector.cost!=null">
                    , cost
                </if>
                <if test="selector.activEffect!=null">
                    , activEffect
                </if>
        </trim>
    </if>
<if test="selector==null">
<include refid="Base_Column_List" />
</if>
        FROM xkf_marketingrecord
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="condition.id!=null">
                AND id = #{condition.id}
            </if>
            <if test="condition.shopHistoryId!=null">
                AND shopHistoryId = #{condition.shopHistoryId}
            </if>
            <if test="condition.marketingId!=null">
                AND marketingId = #{condition.marketingId}
            </if>
            <if test="condition.cost!=null">
                AND cost = #{condition.cost}
            </if>
            <if test="condition.activEffect!=null">
                AND activEffect = #{condition.activEffect}
            </if>
        </trim>
        <if test="orderBy!=null">
        ORDER BY ${orderBy} ${sortBy}
        </if>
    </select>

    <select id="queryOne" parameterType="java.util.Map" resultType="Marketingrecord">
        SELECT
        <if test="selector!=null">
            <trim prefixOverrides=",">
                    <if test="selector.id!=null">
                        , id
                    </if>
                    <if test="selector.shopHistoryId!=null">
                        , shopHistoryId
                    </if>
                    <if test="selector.marketingId!=null">
                        , marketingId
                    </if>
                    <if test="selector.cost!=null">
                        , cost
                    </if>
                    <if test="selector.activEffect!=null">
                        , activEffect
                    </if>
            </trim>
        </if>
        <if test="selector==null">
            <include refid="Base_Column_List" />
        </if>
        FROM xkf_marketingrecord
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="condition.id!=null">
                AND id = #{condition.id}
            </if>
            <if test="condition.shopHistoryId!=null">
                AND shopHistoryId = #{condition.shopHistoryId}
            </if>
            <if test="condition.marketingId!=null">
                AND marketingId = #{condition.marketingId}
            </if>
            <if test="condition.cost!=null">
                AND cost = #{condition.cost}
            </if>
            <if test="condition.activEffect!=null">
                AND activEffect = #{condition.activEffect}
            </if>
        </trim>
        <if test="orderBy!=null">
        ORDER BY ${orderBy} ${sortBy}
        </if>
        limit 0,1
    </select>

    <select id="count" resultType="java.lang.Integer">
        SELECT count(id) FROM xkf_marketingrecord
       <where>
           <if test="id!=null">
               ${groupOp} ${id.field} ${id.op}  #{id.data}
           </if>
           <if test="shopHistoryId!=null">
               ${groupOp} ${shopHistoryId.field} ${shopHistoryId.op}  #{shopHistoryId.data}
           </if>
           <if test="marketingId!=null">
               ${groupOp} ${marketingId.field} ${marketingId.op}  #{marketingId.data}
           </if>
           <if test="cost!=null">
               ${groupOp} ${cost.field} ${cost.op}  #{cost.data}
           </if>
           <if test="activEffect!=null">
               ${groupOp} ${activEffect.field} ${activEffect.op}  #{activEffect.data}
           </if>

       </where>
    </select>

    <select id="selectMaxId" resultType="java.lang.Integer">
        SELECT
        MAX(id)
        FROM xkf_marketingrecord
    </select>

</mapper>

